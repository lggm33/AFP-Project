# Generated by Django 4.2 on 2025-06-08 04:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=2)),
                ('domains', models.JSONField(default=list, help_text="Bank domains like ['bac.cr', 'baccr.com']")),
                ('sender_emails', models.JSONField(default=list, help_text="Bank sender emails like ['alerts@bac.cr']")),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bank',
                'verbose_name_plural': 'Banks',
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='EmailPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('transfer', 'Transfer'), ('atm', 'ATM'), ('payment', 'Payment'), ('deposit', 'Deposit')], max_length=50)),
                ('amount_regex', models.TextField(help_text='Regex pattern to extract transaction amount')),
                ('merchant_regex', models.TextField(blank=True, help_text='Regex pattern to extract merchant/recipient')),
                ('date_regex', models.TextField(help_text='Regex pattern to extract transaction date')),
                ('reference_regex', models.TextField(blank=True, help_text='Regex pattern to extract reference number')),
                ('confidence_threshold', models.FloatField(default=0.7, help_text='Minimum confidence score to use this pattern')),
                ('success_count', models.IntegerField(default=0, help_text='Number of successful extractions')),
                ('failure_count', models.IntegerField(default=0, help_text='Number of failed extractions')),
                ('is_active', models.BooleanField(default=True)),
                ('generated_by_ai', models.BooleanField(default=True)),
                ('ai_model', models.CharField(default='gpt-4', help_text='AI model used to generate pattern', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking.bank')),
            ],
            options={
                'verbose_name': 'Email Pattern',
                'verbose_name_plural': 'Email Patterns',
                'unique_together': {('bank', 'transaction_type')},
            },
        ),
    ]
